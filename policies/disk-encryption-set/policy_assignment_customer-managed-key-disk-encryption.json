{
    "name": "customer-managed-key-disk-encryption",
    "type": "Microsoft.Authorization/policyAssignments",
    "apiVersion": "2019-09-01",
    "properties": {
        "description": "This policy ensures a Disk Encryption Set exists for Customer Managed Key Disk Encryption, importing a key from a Customer provided certificate .",
        "displayName": "Customer Managed Key for Disk Encryption",
        "notScopes": [],
        "parameters": {
            "sourceSubscriptionId": {
                "type": "String",
                "metadata": {
                    "description": "The id of the Subscription from which the Customer Managed Key should be imported",
                    "displayName": "Source Subscription ID"
                }
            },
            "sourceResourceGroupName": {
                "type": "String",
                "metadata": {
                    "description": "The name of the Resource Group containing the Key Vault from which the Customer Managed Key should be imported",
                    "displayName": "Source Resource Group Name"
                }
            },
            "sourceKeyVaultName": {
                "type": "String",
                "metadata": {
                    "description": "The name of the Key Vault from which the Customer Managed Key should be imported",
                    "displayName": "Source Key Vault Name"
                }
            },
            "sourceCmkCertificateName": {
                "type": "String",
                "metadata": {
                    "description": "The name of the Certificate within the source Key Vault which should be used as the Customer Managed Key for Disk Encryption",
                    "displayName": "Source Customer Managed Key Certificate Name"
                }
            },
            "destinationSubscriptionName": {
                "type": "String",
                "metadata": {
                    "description": "The name of the Subscription which should contain a Customer Manager Key and Disk Encryption Set",
                    "displayName": "Destination Subscription Name"
                }
            },
            "destinationKeyVaultResourceGroupName": {
                "type": "String",
                "metadata": {
                    "description": "The name of the Resource Group containing the Key Vault within the destination Subscription which should receive the imported Customer Managed Key",
                    "displayName": "Destination Key Vault Resource Group Name"
                }
            },
            "destinationKeyVaultName": {
                "type": "String",
                "metadata": {
                    "description": "The name of the Key Vault within the destination Subscription which should receive the imported Customer Managed Key",
                    "displayName": "Destination Key Vault Name"
                }
            }
        },
        "scope": "${current_scope_resource_id}",
        "enforcementMode": null
    },
    "location": "${default_location}",
    "identity": {
        "type": "SystemAssigned"
    },
    "policyRule": {
        "if": {
            "allOf": [{
                "field": "type",
                "equals": "Microsoft.Resources/subscriptions"
            }, {
                "field": "name",
                "equals": "[parameters('subscriptionName')]"
            }]
        },
        "then": {
            "effect": "deployIfNotExists",
            "details": {
                "type": "Microsoft.Compute/diskEncryptionSets",
                "resourceGroupName": "cmk-encryption-rg",
                "name": "cmk-platform-des",
                "evaluationDelay": "AfterProvisioning",
                "roleDefinitionIds": [ // TODO currently set to owner, what roles does the service principal need?
                    "/subscriptions/[field('id')]/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                ],
                "deployment": {
                    "properties": {
                        "mode": "incremental",
                        "template": {
                            // Can we reference an external file or anything here?
                        },
                        "parameters": {
                            "location": {
                                "value": "[fields('location')]"
                            },
                            "sourceSubscriptionId": {
                                "value": "[parameters('sourceSubscriptionId')]"
                            },
                            "sourceResourceGroupName": {
                                "value": "[parameters('sourceResourceGroupName')]"
                            },
                            "sourceKeyVaultName": {
                                "value": "[parameters('sourceKeyVaultName')]"
                            },
                            "sourceCmkCertificateName": {
                                "value": "[parameters('sourceCmkCertificateName')]"
                            },
                            "destinationSubscriptionId": {
                                "value": "[fields('id')]"
                            },
                            "destinationKeyVaultResourceGroupName": {
                                "value": "[parameters('destinationKeyVaultResourceGroupName')]"
                            },
                            "destinationKeyVaultName": {
                                "value": "[parameters('destinationKeyVaultName')]"
                            }
                        }
                    }
                }
            }
        }
    }
}
