name: tenant-deploy-dev
on:
  push:
    branches:
      - mc-dev
    paths:
      - tenant/**
      - .github/workflows/tenant-deploy-dev.yml


env:
  backendSubscriptionId: "0f837e64-c72f-4d8f-9d5b-28cd9bc3674d"
  tenantId: "dcd5d5df-cb89-42a7-85cc-e3b113d4aad1"
  parentMgmtGroupId: "envsmgmt"
  environment: "dev"

jobs:
  deploy:
    runs-on: ubuntu-20.04
    container:
      image: ffmgmtacr.azurecr.io/build-agent-tools:latest
      credentials:
        username: ${{ secrets.CLIENTID }}
        password: ${{ secrets.CLIENTSECRET }}
    steps:
    
    - name: Work-around for permission issue in Ubuntu following CVE
      run: git config --global --add safe.directory /__w/forefront-lz/forefront-lz
    
    - uses: actions/checkout@v2
    - uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_TEST_CREDENTIALS }}

    - name: Retrieve secrets from key vault
      uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: 'ffmgmtkv'
        secrets: 'arm-client-secret'
      id: getSecrets
    
    - name: Retrieve variables from dev-variables.yml
      uses: lindluni/actions-variable-groups@v1.0.1
      with:
        org: mattcowen
        repo: forefront-lz
        groups: |
          .github/dev-variables.yml@mc-dev
      id: getVars

    - name: Print Environment
      run: env | sort

    - name: Print tooling versions
      run: |
        bash /scripts/tools-validate.sh

    - name: Terraform Init     
      env:
        BACKEND_RESGRP: ${{ env.backend_resgrp }}
        BACKEND_STORAGE_ACCOUNT: ${{ env.backend_storage_account }}
        BACKEND_CONTAINER: ${{ env.backend_container }}
        BACKEND_KEY: ${{ env.environment }}
        BACKEND_CLIENT_ID: ${{ secrets.CLIENTID }}
        BACKEND_CLIENT_SECRET: ${{ secrets.CLIENTSECRET }}
        BACKEND_CLIENT_SUBSCRIPTION_ID: ${{ env.backendSubscriptionId }}
        BACKEND_CLIENT_TENANTID: ${{ env.tenantId }}
        ARM_CLIENT_ID: ${{ env.arm_client_id }}
        ARM_CLIENT_SECRET: ${{ steps.getSecrets.outputs.arm-client-secret }}
        ARM_SUBSCRIPTION_ID: ${{ env.arm_subscription_id }}
        ARM_TENANT_ID: ${{ env.arm_tenant_id }}
      run: |
        cd tenant
        bash /scripts/terraform-init.sh

    - name: Terraform Plan Before
      env:
        BACKEND_RESGRP: ${{ env.backend_resgrp }}
        BACKEND_STORAGE_ACCOUNT: ${{ env.backend_storage_account }}
        BACKEND_CONTAINER: ${{ env.backend_container }}
        BACKEND_KEY: ${{ env.environment }}
        BACKEND_CLIENT_ID: ${{ secrets.CLIENTID }}
        BACKEND_CLIENT_SECRET: ${{ secrets.CLIENTSECRET }}
        BACKEND_CLIENT_SUBSCRIPTION_ID: ${{ env.backendSubscriptionId }}
        BACKEND_CLIENT_TENANTID: ${{ env.tenantId }}
        ARM_CLIENT_ID: ${{ env.arm_client_id }}
        ARM_CLIENT_SECRET: ${{ steps.getSecrets.outputs.arm-client-secret }}
        ARM_SUBSCRIPTION_ID: ${{ env.arm_subscription_id }}
        ARM_TENANT_ID: ${{ env.arm_tenant_id }}

        TF_VAR_parent_id:  ${{ env.parentMgmtGroupId }}
        TF_VAR_root_name: ${{ env.tf_var_root_name }}
        TF_VAR_root_id: ${{ env.tf_var_root_id }}
        TF_VAR_connectivity_subid: ${{ env.tf_var_connectivity_subid }}
        TF_VAR_management_subid: ${{ env.tf_var_management_subid }}
        TF_VAR_identity_subid: ${{ env.tf_var_identity_subid }}
        TF_VAR_corp_subs: ${{ env.corp_subs }}
        TF_VAR_sandboxes: ${{ env.sandboxes }}

        TF_VAR_security_alerts_email_address: ${{ env.tf_var_security_alerts_email_address }}
        TF_VAR_management_resources_location: ${{ env.tf_var_mgmt_location }}
        TF_VAR_connectivity_resources_location: ${{ env.tf_var_connectivity_location }}

        TF_VAR_running_ci_pipeline: "true"
        TF_IN_AUTOMATION: "true"
      run: |
        cd tenant
        bash /scripts/terraform-plan-before.sh devplan
 
    - name: Terraform Apply
      env:
        BACKEND_RESGRP: ${{ env.backend_resgrp }}
        BACKEND_STORAGE_ACCOUNT: ${{ env.backend_storage_account }}
        BACKEND_CONTAINER: ${{ env.backend_container }}
        BACKEND_KEY: ${{ env.environment }}
        BACKEND_CLIENT_ID: ${{ secrets.CLIENTID }}
        BACKEND_CLIENT_SECRET: ${{ secrets.CLIENTSECRET }}
        BACKEND_CLIENT_SUBSCRIPTION_ID: ${{ env.backendSubscriptionId }}
        BACKEND_CLIENT_TENANTID: ${{ env.tenantId }}
        ARM_CLIENT_ID: ${{ env.arm_client_id }}
        ARM_CLIENT_SECRET: ${{ steps.getSecrets.outputs.arm-client-secret }}
        ARM_SUBSCRIPTION_ID: ${{ env.arm_subscription_id }}
        ARM_TENANT_ID: ${{ env.arm_tenant_id }}

        TF_VAR_parent_id:  ${{ env.parentMgmtGroupId }}
        TF_VAR_root_name: ${{ env.tf_var_root_name }}
        TF_VAR_root_id: ${{ env.tf_var_root_id }}
        TF_VAR_connectivity_subid: ${{ env.tf_var_connectivity_subid }}
        TF_VAR_management_subid: ${{ env.tf_var_management_subid }}
        TF_VAR_identity_subid: ${{ env.tf_var_identity_subid }}
        TF_VAR_corp_subs: ${{ env.corp_subs }}
        TF_VAR_sandboxes: ${{ env.sandboxes }}

        TF_VAR_security_alerts_email_address: ${{ env.tf_var_security_alerts_email_address }}
        TF_VAR_management_resources_location: ${{ env.tf_var_mgmt_location }}
        TF_VAR_connectivity_resources_location: ${{ env.tf_var_connectivity_location }}

        TF_VAR_running_ci_pipeline: "true"
        TF_IN_AUTOMATION: "true"
      run: |
        cd tenant
        bash /scripts/terraform-apply.sh devplan

    - name: Terraform Plan After
      env:
        BACKEND_RESGRP: ${{ env.backend_resgrp }}
        BACKEND_STORAGE_ACCOUNT: ${{ env.backend_storage_account }}
        BACKEND_CONTAINER: ${{ env.backend_container }}
        BACKEND_KEY: ${{ env.environment }}
        BACKEND_CLIENT_ID: ${{ secrets.CLIENTID }}
        BACKEND_CLIENT_SECRET: ${{ secrets.CLIENTSECRET }}
        BACKEND_CLIENT_SUBSCRIPTION_ID: ${{ env.backendSubscriptionId }}
        BACKEND_CLIENT_TENANTID: ${{ env.tenantId }}
        ARM_CLIENT_ID: ${{ env.arm_client_id }}
        ARM_CLIENT_SECRET: ${{ steps.getSecrets.outputs.arm-client-secret }}
        ARM_SUBSCRIPTION_ID: ${{ env.arm_subscription_id }}
        ARM_TENANT_ID: ${{ env.arm_tenant_id }}

        TF_VAR_parent_id:  ${{ env.parentMgmtGroupId }}
        TF_VAR_root_name: ${{ env.tf_var_root_name }}
        TF_VAR_root_id: ${{ env.tf_var_root_id }}
        TF_VAR_connectivity_subid: ${{ env.tf_var_connectivity_subid }}
        TF_VAR_management_subid: ${{ env.tf_var_management_subid }}
        TF_VAR_identity_subid: ${{ env.tf_var_identity_subid }}
        TF_VAR_corp_subs: ${{ env.corp_subs }}
        TF_VAR_sandboxes: ${{ env.sandboxes }}

        TF_VAR_security_alerts_email_address: ${{ env.tf_var_security_alerts_email_address }}
        TF_VAR_management_resources_location: ${{ env.tf_var_mgmt_location }}
        TF_VAR_connectivity_resources_location: ${{ env.tf_var_connectivity_location }}

        TF_VAR_running_ci_pipeline: "true"
        TF_IN_AUTOMATION: "true"
      run: |
        cd tenant
        bash /scripts/terraform-plan-after.sh devplan2

    - name: Terraform Destroy
      env:
        BACKEND_RESGRP: ${{ env.backend_resgrp }}
        BACKEND_STORAGE_ACCOUNT: ${{ env.backend_storage_account }}
        BACKEND_CONTAINER: ${{ env.backend_container }}
        BACKEND_KEY: ${{ env.environment }}
        BACKEND_CLIENT_ID: ${{ secrets.CLIENTID }}
        BACKEND_CLIENT_SECRET: ${{ secrets.CLIENTSECRET }}
        BACKEND_CLIENT_SUBSCRIPTION_ID: ${{ env.backendSubscriptionId }}
        BACKEND_CLIENT_TENANTID: ${{ env.tenantId }}
        ARM_CLIENT_ID: ${{ env.arm_client_id }}
        ARM_CLIENT_SECRET: ${{ steps.getSecrets.outputs.arm-client-secret }}
        ARM_SUBSCRIPTION_ID: ${{ env.arm_subscription_id }}
        ARM_TENANT_ID: ${{ env.arm_tenant_id }}

        TF_VAR_running_ci_pipeline: "true"
        TF_IN_AUTOMATION: "true"

      run: |
        cd tenant
        bash /scripts/terraform-destroy.sh