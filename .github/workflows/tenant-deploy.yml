name: tenant-deploy
on:
  push:
    branches:
      - gareth-local-dev
jobs:
  deploy:
    runs-on: ubuntu-20.04
    container:
      image: ffmgmtacr.azurecr.io/build-agent-tools:latest
      credentials:
        username: ${{ secrets.AZURE_TEST_CREDENTIALS }}.clientId
        password: ${{ secrets.AZURE_TEST_CREDENTIALS }}.clientSecret
    steps:
      # checkout the repo
    - uses: actions/checkout@master #TODO test
    - uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_TEST_CREDENTIALS }}
    - uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: ${{ secrets.KEY_VAULT_NAME }}
        secrets: 'BACKEND_RESGRP,BACKEND_STORAGE_ACCOUNT,BACKEND_CONTAINER,ARM_CLIENT_ID,ARM_CLIENT_SECRET,ARM_SUBSCRIPTION_ID,ARM_TENANT_ID,AZDO_PERSONAL_ACCESS_TOKEN,AZDO_ORG_SERVICE_URL,TF_VAR_management_group_name'
      id: getSecrets
    
    - name: Print tooling versions
      env:
        BACKEND_RESGRP: ${{ steps.getSecrets.BACKEND_RESGRP }}
        BACKEND_STORAGE_ACCOUNT: ${{ steps.getSecrets.BACKEND_STORAGE_ACCOUNT }}
        BACKEND_CONTAINER: ${{ steps.getSecrets.BACKEND_CONTAINER }}

        #TODO can you address the credentials within a json secret like this? probably not...
        BACKEND_CLIENT_ID: ${{ secrets.AZURE_TEST_CREDENTIALS.clientId }}
        BACKEND_CLIENT_SECRET: ${{ secrets.AZURE_TEST_CREDENTIALS.clientSecret }}
        BACKEND_CLIENT_SUBSCRIPTION_ID: ${{ secrets.AZURE_TEST_CREDENTIALS.subscriptionId }}
        BACKEND_CLIENT_TENANTID: ${{ secrets.AZURE_TEST_CREDENTIALS.tenantId }}
        
        ARM_CLIENT_ID: ${{ steps.getSecrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ steps.getSecrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ steps.getSecrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ steps.getSecrets.ARM_TENANT_ID }}
        
        AZDO_PERSONAL_ACCESS_TOKEN: ${{ steps.getSecrets.AZDO_PERSONAL_ACCESS_TOKEN }}
        AZDO_ORG_SERVICE_URL: ${{ steps.getSecrets.AZDO_ORG_SERVICE_URL }}
        
        TF_VAR_management_group_name: ${{ steps.getSecrets.TF_VAR_management_group_name }}
      run: |
        terraform --version
        az --version